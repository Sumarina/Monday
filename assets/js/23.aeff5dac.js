(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{378:function(v,_,t){"use strict";t.r(_);var l=t(43),s=Object(l.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"如何理解前端模块化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何理解前端模块化"}},[v._v("#")]),v._v(" 如何理解前端模块化")]),v._v(" "),t("p",[v._v("在 JavaScript 发展初期，我们并没有前后端分离的说法。我刚开始做 asp.net 或者 jsp 开发的时候，基本就是我一个人承担了所有的开发任务：html 页面、简单的 js 交互逻辑、后端开发、数据库建表以及写文档等。这样做的好处就是我想修改哪就修改哪，不用通知任何人。可是随着前端的发展，前端开发的功能越来越复杂，也有很多后端的功能迁移到前端做(如：各种验证等)，js 代码越来越多，增加了后期的维护成本。")]),v._v(" "),t("p",[t("strong",[v._v("使用 script 引入文件：")])]),v._v(" "),t("ol",[t("li",[v._v("增加 http 请求。")]),v._v(" "),t("li",[v._v("依赖关系比较混乱，易因为引入先后次序的问题报错。")]),v._v(" "),t("li",[v._v("难以维护，容易牵一发而动全身导致各种奇奇怪怪的问题。")])]),v._v(" "),t("p",[v._v("所以我们不得不考虑使用模块化管理前端。")]),v._v(" "),t("p",[v._v("模块化就是将一个复杂的程序按照一定的规则封装成几个模块(文件)，并组合在一起。模块内部的数据都是私有化的，只会暴露出几个接口和其他组件通信。")]),v._v(" "),t("p",[t("strong",[v._v("模块化的好处：")])]),v._v(" "),t("ol",[t("li",[v._v("避免命名冲突，减少命名空间污染。")]),v._v(" "),t("li",[v._v("按需加载。")]),v._v(" "),t("li",[v._v("提高了代码的复用性。")]),v._v(" "),t("li",[v._v("减少了维护成本等。")])]),v._v(" "),t("p",[v._v("当然，模块化也有弊端。")]),v._v(" "),t("ol",[t("li",[v._v("增加开发成本，开发周期长。")]),v._v(" "),t("li",[v._v("模块的加载是单独请求或者统一打包成一个文件请求（打包成一个文件易造成首次加载慢的问题）。")]),v._v(" "),t("li",[v._v("兼容性问题等。")])])])}),[],!1,null,null,null);_.default=s.exports}}]);