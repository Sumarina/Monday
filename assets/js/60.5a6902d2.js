(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{417:function(v,_,t){"use strict";t.r(_);var a=t(43),s=Object(a.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"面试总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#面试总结"}},[v._v("#")]),v._v(" 面试总结")]),v._v(" "),t("h2",{attrs:{id:"js"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#js"}},[v._v("#")]),v._v(" js")]),v._v(" "),t("ol",[t("li",[v._v("几种继承方式以及其优缺点\n原型链继承 构造函数继承 组合继承\n原型式继承 寄生式继承 寄生组合继承")]),v._v(" "),t("li",[v._v("代码的垃圾回收机制\n简单的说就是将不再使用的变量释放它们所占用的内存空间。\n垃圾收集器在运行的时候会给内存中存储的变量打一个标记，当变量进入一个环境会有一个“进入环境”的标记，离开运行的环境时，会有一个“离开环境”的标记，那么垃圾收集齐就会去除掉这个变量在一开始存储的时候的标记，随之再打上另一个标记（具体是什么标记不清楚），总之就是标记这个变量不再使用，可以清除变量释放它所占用的内存。")]),v._v(" "),t("li",[v._v("this 指向")]),v._v(" "),t("li",[v._v("普通函数和匿名函数的区别")]),v._v(" "),t("li",[v._v("js 的事件循环机制（以及 NodeJS 的事件循环机制）")]),v._v(" "),t("li",[v._v("new 创建实例的过程")]),v._v(" "),t("li",[v._v("函数式编程")]),v._v(" "),t("li",[v._v("CommonJs 和 ES6 Module 区别")]),v._v(" "),t("li",[v._v("async await")])]),v._v(" "),t("h2",{attrs:{id:"css"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#css"}},[v._v("#")]),v._v(" css")]),v._v(" "),t("ol",[t("li",[v._v("sass 和 less 的区别")]),v._v(" "),t("li",[v._v("标准盒模型和 IE 盒模型的区别")]),v._v(" "),t("li",[v._v("设置垂直高度的几种方式")])]),v._v(" "),t("h2",{attrs:{id:"dom"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dom"}},[v._v("#")]),v._v(" dom")]),v._v(" "),t("ol",[t("li",[v._v("js 操作 dom 的 api 以及其兼容性问题。如获取可视化区域的高度问题")])]),v._v(" "),t("h2",{attrs:{id:"webpack"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack"}},[v._v("#")]),v._v(" webpack")]),v._v(" "),t("ol",[t("li",[v._v("对 webpack 的理解")]),v._v(" "),t("li",[v._v("如何优化")])]),v._v(" "),t("h2",{attrs:{id:"http"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http"}},[v._v("#")]),v._v(" http")]),v._v(" "),t("ol",[t("li",[v._v("get 和 post 的区别？（幂等的区别）")]),v._v(" "),t("li",[v._v("http 和 https 的区别")]),v._v(" "),t("li",[v._v("了解 http2.0")]),v._v(" "),t("li",[v._v("如何防止注入？")]),v._v(" "),t("li",[v._v("如何设置 cors？简单请求和复杂请求分别有哪些？")]),v._v(" "),t("li",[v._v("跨域问题")]),v._v(" "),t("li",[v._v("缓存")]),v._v(" "),t("li",[v._v("三次握手和四次挥手")])]),v._v(" "),t("h2",{attrs:{id:"git"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[v._v("#")]),v._v(" git")]),v._v(" "),t("ol",[t("li",[v._v("如何解决变基问题")])]),v._v(" "),t("h2",{attrs:{id:"手写代码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#手写代码"}},[v._v("#")]),v._v(" 手写代码")]),v._v(" "),t("ol",[t("li",[v._v("call 和 apply")]),v._v(" "),t("li",[v._v("promise")]),v._v(" "),t("li",[v._v("深度拷贝")])]),v._v(" "),t("h2",{attrs:{id:"vue"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue"}},[v._v("#")]),v._v(" vue")]),v._v(" "),t("ol",[t("li",[v._v("生命周期")]),v._v(" "),t("li",[v._v("双向绑定的原理")]),v._v(" "),t("li",[v._v("虚拟 dom")]),v._v(" "),t("li",[v._v("diff 算法（尤其是 patchNode 的过程）")]),v._v(" "),t("li",[v._v("keep-alive 的作用")]),v._v(" "),t("li",[v._v("组件之间的通信方式")]),v._v(" "),t("li",[v._v("自定义 tips 组件")]),v._v(" "),t("li",[v._v("自定义 dialog 组件")]),v._v(" "),t("li",[v._v("vue 如何优化")])]),v._v(" "),t("h2",{attrs:{id:"算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#算法"}},[v._v("#")]),v._v(" 算法")]),v._v(" "),t("ol",[t("li",[v._v("判断是否为回文字符串")]),v._v(" "),t("li",[v._v("判断两个数字的最大公约数")])]),v._v(" "),t("h2",{attrs:{id:"性能优化问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#性能优化问题"}},[v._v("#")]),v._v(" 性能优化问题")]),v._v(" "),t("h2",{attrs:{id:"项目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#项目"}},[v._v("#")]),v._v(" 项目")]),v._v(" "),t("ol",[t("li",[v._v("项目的难点")]),v._v(" "),t("li",[v._v("和后端的合作方式")]),v._v(" "),t("li",[v._v("如何优化")]),v._v(" "),t("li",[v._v("如何设计一套组件库")]),v._v(" "),t("li",[v._v("并发请求如何控制只发一个请求？")]),v._v(" "),t("li",[v._v("真正理解 promise")]),v._v(" "),t("li",[v._v("什么是函数式编程？为什么要用函数编程？")])])])}),[],!1,null,null,null);_.default=s.exports}}]);